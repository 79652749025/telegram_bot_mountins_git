# -*- coding: utf-8 -*-
import os
import logging
import asyncio
import hashlib
from urllib.parse import unquote, quote_plus
from aiogram import Bot, Dispatcher, F, types
from aiogram.filters import Command
from aiogram.client.default import DefaultBotProperties
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import InlineKeyboardBuilder # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º InlineKeyboardBuilder –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
from database.postgres_VR2 import Database 
from dotenv import load_dotenv
import qrcode
import hashlib
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message, CallbackQuery
from aiogram import F

ADMIN_IDS = (709108561, 7637004765)
# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

load_dotenv()

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM ---
class SearchStates(StatesGroup):
    waiting_for_post_keyword = State()
    waiting_for_news_keyword = State()

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ---
NEWS_PER_PAGE = 5 # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ


# --- –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ ---
class TelegramBot:
    def __init__(self):
        self.bot = None
        self.dp = None
        self.db = None
        self.bot_username = os.getenv('BOT_USERNAME', 'vershiny_rossii_bot')
        self.admin_id = os.getenv('ADMIN_ID')

    async def setup_database(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        db_config = {
            'user': os.getenv('DB_USER', 'postgres'),
            'password': os.getenv('DB_PASSWORD'),
            'database': os.getenv('DB_NAME', 'vershinyrossii2'),
            'host': os.getenv('DB_HOST', '127.0.0.1'),
            'port': int(os.getenv('DB_PORT', 5433)),
        }
        
        try:
            self.db = Database(**db_config)
            await self.db.connect() # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –≤–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞ Database –µ—Å—Ç—å –º–µ—Ç–æ–¥ connect()
            await self.init_tables()
            await self.insert_test_data()
            logger.info("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ë–î: {e}")
            raise

    async def init_tables(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        try:
            async with self.db.pool.acquire() as conn:
                # –¢–∞–±–ª–∏—Ü–∞ –ø–æ—Å—Ç–æ–≤
                await conn.execute('''
                    CREATE TABLE IF NOT EXISTS posts (
                        id SERIAL PRIMARY KEY,
                        qr_id VARCHAR(50) UNIQUE NOT NULL,
                        title VARCHAR(255) NOT NULL,
                        description TEXT NOT NULL,
                        image_url VARCHAR(255) NOT NULL,
                        content_url VARCHAR(255),
                        is_active BOOLEAN DEFAULT TRUE,
                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                    )
                ''')

                # –¢–∞–±–ª–∏—Ü–∞ –Ω–æ–≤–æ—Å—Ç–µ–π (–¥–æ–±–∞–≤–ª–µ–Ω UNIQUE CONFLICT –Ω–∞ telegram_url –¥–ª—è on_conflict)
                await conn.execute('''
                    CREATE TABLE IF NOT EXISTS news (
                        id SERIAL PRIMARY KEY,
                        telegram_url TEXT UNIQUE NOT NULL, -- –î–æ–±–∞–≤–ª–µ–Ω–æ UNIQUE
                        news_type TEXT NOT NULL,
                        title TEXT,
                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                    )
                ''')

                # –¢–∞–±–ª–∏—Ü–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                await conn.execute('''
                    CREATE TABLE IF NOT EXISTS user_interactions (
                        id SERIAL PRIMARY KEY,
                        user_id BIGINT NOT NULL,
                        username VARCHAR(255),
                        first_name VARCHAR(255),
                        last_name VARCHAR(255),
                        qr_id VARCHAR(50),
                        post_id INTEGER REFERENCES posts(id),
                        interaction_type VARCHAR(50) NOT NULL,
                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                    )
                ''')
            
            logger.info("–¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü: {e}")
            raise

    async def on_join(message: Message):
        if message.new_chat_members:
            for user in message.new_chat_members:
                await message.reply(f"–ü—Ä–∏–≤–µ—Ç, {user.full_name} üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
    
    async def broadcast_message(application, text: str):
        async with application.bot_data["db"].pool.acquire() as conn:
            rows = await conn.fetch("SELECT user_id FROM subscribers")

        for row in rows:
            try:
                await application.bot.send_message(chat_id=row["user_id"], text=text)
                await asyncio.sleep(0.05)
            except Exception as e:
                logging.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {row['user_id']}: {e}")



            
    async def insert_test_data(self):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        async with self.db.pool.acquire() as conn:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
            if await conn.fetchval("SELECT COUNT(*) FROM news WHERE news_type = '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π'") < 10:
                news_data = [
                        ('https://t.me/TopRussiaBrand/288', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #1'),
                        ('https://t.me/TopRussiaBrand/289', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #2'),
                        ('https://t.me/TopRussiaBrand/290', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #3'),
                        ('https://t.me/TopRussiaBrand/292', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #4'),
                        ('https://t.me/TopRussiaBrand/293', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #5'),
                        ('https://t.me/TopRussiaBrand/294', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #6'),
                        ('https://t.me/TopRussiaBrand/296', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #7'),
                        ('https://t.me/TopRussiaBrand/297', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #8'),
                        ('https://t.me/TopRussiaBrand/298', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #9'),
                        ('https://t.me/TopRussiaBrand/299', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #10'),
                        ('https://t.me/TopRussiaBrand/300', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #11'),
                        ('https://t.me/TopRussiaBrand/301', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #12'),
                        ('https://t.me/TopRussiaBrand/303', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #13'),
                        ('https://t.me/TopRussiaBrand/304', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #14'),
                        ('https://t.me/TopRussiaBrand/306', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #15'),
                        ('https://t.me/TopRussiaBrand/307', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #16'),
                        ('https://t.me/TopRussiaBrand/308', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #17'),
                        ('https://t.me/TopRussiaBrand/309', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #18'),
                        ('https://t.me/TopRussiaBrand/311', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #19'),
                        ('https://t.me/TopRussiaBrand/312', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #20'),
                        ('https://t.me/TopRussiaBrand/313', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #21'),
                        ('https://t.me/TopRussiaBrand/314', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #22'),
                        ('https://t.me/TopRussiaBrand/315', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #23'),
                        ('https://t.me/TopRussiaBrand/317', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #24'),
                        ('https://t.me/TopRussiaBrand/318', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #25'),
                        ('https://t.me/TopRussiaBrand/320', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #26'),
                        ('https://t.me/TopRussiaBrand/321', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #27'),
                        ('https://t.me/TopRussiaBrand/322', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #28'),
                        ('https://t.me/TopRussiaBrand/323', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #29'),
                        ('https://t.me/TopRussiaBrand/325', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #30'),
                        ('https://t.me/TopRussiaBrand/326', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #31'),
                        ('https://t.me/TopRussiaBrand/327', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #32'),
                        ('https://t.me/TopRussiaBrand/328', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #33'),
                        ('https://t.me/TopRussiaBrand/329', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #34'),
                        ('https://t.me/TopRussiaBrand/330', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #35'),
                        ('https://t.me/TopRussiaBrand/333', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #36'),
                        ('https://t.me/TopRussiaBrand/334', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #37'),
                        ('https://t.me/TopRussiaBrand/335', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #38'),
                        ('https://t.me/TopRussiaBrand/336', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #39'),
                        ('https://t.me/TopRussiaBrand/337', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #40'),
                        ('https://t.me/TopRussiaBrand/339', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #41'),
                        ('https://t.me/TopRussiaBrand/340', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #42'),
                        ('https://t.me/TopRussiaBrand/341', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #43'),
                        ('https://t.me/TopRussiaBrand/342', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #44'),
                        ('https://t.me/TopRussiaBrand/343', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #45'),
                        ('https://t.me/TopRussiaBrand/346', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #46'),
                        ('https://t.me/TopRussiaBrand/347', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #47'),
                        ('https://t.me/TopRussiaBrand/348?single', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #48'),
                        ('https://t.me/TopRussiaBrand/351', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #49'),
                        ('https://t.me/TopRussiaBrand/352', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #50'),
                        ('https://t.me/TopRussiaBrand/353', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #51'),
                        ('https://t.me/TopRussiaBrand/354', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #52'),
                        ('https://t.me/TopRussiaBrand/355', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #53'),
                        ('https://t.me/TopRussiaBrand/356', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #54'),
                        ('https://t.me/TopRussiaBrand/357', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #55'),
                        ('https://t.me/TopRussiaBrand/358', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #56'),
                        ('https://t.me/TopRussiaBrand/359', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #57'),
                        ('https://t.me/TopRussiaBrand/360', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #58'),
                        ('https://t.me/TopRussiaBrand/361', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #59'),
                        ('https://t.me/TopRussiaBrand/362', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #60'),
                        ('https://t.me/TopRussiaBrand/363', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #61'),
                        ('https://t.me/TopRussiaBrand/364', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #62'),
                        ('https://t.me/TopRussiaBrand/365', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #63'),
                        ('https://t.me/TopRussiaBrand/366', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #64'),
                        ('https://t.me/TopRussiaBrand/367', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #65'),
                        ('https://t.me/TopRussiaBrand/368', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #66'),
                        ('https://t.me/TopRussiaBrand/369', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #67'),
                        ('https://t.me/TopRussiaBrand/370', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #68'),
                        ('https://t.me/TopRussiaBrand/371', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #69'),
                        ('https://t.me/TopRussiaBrand/372', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #70'),
                        ('https://t.me/TopRussiaBrand/373', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #71'),
                        ('https://t.me/TopRussiaBrand/374', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #72'),
                        ('https://t.me/TopRussiaBrand/375', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #73'),
                        ('https://t.me/TopRussiaBrand/376', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #74'),
                        ('https://t.me/TopRussiaBrand/377', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #75'),
                        ('https://t.me/TopRussiaBrand/378', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #76'),
                        ('https://t.me/TopRussiaBrand/380', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #77'),
                        ('https://t.me/TopRussiaBrand/381', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #78'),
                        ('https://t.me/TopRussiaBrand/382?single', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #79'),
                        ('https://t.me/TopRussiaBrand/384', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #80'),
                        ('https://t.me/TopRussiaBrand/386', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #81'),
                        ('https://t.me/TopRussiaBrand/387', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #82'),
                        ('https://t.me/TopRussiaBrand/388', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #83'),
                        ('https://t.me/TopRussiaBrand/389', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #84'),
                        ('https://t.me/TopRussiaBrand/390', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #85'),
                        ('https://t.me/TopRussiaBrand/392', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #86'),
                        ('https://t.me/TopRussiaBrand/393', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #87'),
                        ('https://t.me/TopRussiaBrand/394', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #88'),
                        ('https://t.me/TopRussiaBrand/395', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #89'),
                        ('https://t.me/TopRussiaBrand/396', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #90'),
                        ('https://t.me/TopRussiaBrand/397', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #91'),
                        ('https://t.me/TopRussiaBrand/398', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #92'),
                        ('https://t.me/TopRussiaBrand/399', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #93'),
                        ('https://t.me/TopRussiaBrand/400', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #94'),
                        ('https://t.me/TopRussiaBrand/401', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #95'),
                        ('https://t.me/TopRussiaBrand/402', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #96'),
                        ('https://t.me/TopRussiaBrand/403', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #97'),
                        ('https://t.me/TopRussiaBrand/404', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #98'),
                        ('https://t.me/TopRussiaBrand/405?single', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #99'),
                        ('https://t.me/TopRussiaBrand/407', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #100'),
                        ('https://t.me/TopRussiaBrand/408', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #101'),
                        ('https://t.me/TopRussiaBrand/409', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #102'),
                        ('https://t.me/TopRussiaBrand/410', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #103'),
                        ('https://t.me/TopRussiaBrand/412', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #104'),
                        ('https://t.me/TopRussiaBrand/413', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #105'),
                        ('https://t.me/TopRussiaBrand/414', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #106'),
                        ('https://t.me/TopRussiaBrand/415', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #107'),
                        ('https://t.me/TopRussiaBrand/416', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #108'),
                        ('https://t.me/TopRussiaBrand/417', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #109'),
                        ('https://t.me/TopRussiaBrand/418', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #110'),
                        ('https://t.me/TopRussiaBrand/423', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #111'),
                        ('https://t.me/TopRussiaBrand/424', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #112'),
                        ('https://t.me/TopRussiaBrand/426', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #113'),
                        ('https://t.me/TopRussiaBrand/427', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #114'),
                        ('https://t.me/TopRussiaBrand/428', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #115'),
                        ('https://t.me/TopRussiaBrand/429', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #116'),
                        ('https://t.me/TopRussiaBrand/430', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #117'),
                        ('https://t.me/TopRussiaBrand/431', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #118'),
                        ('https://t.me/TopRussiaBrand/432', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #119'),
                        ('https://t.me/TopRussiaBrand/433', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #120'),
                        ('https://t.me/TopRussiaBrand/435', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #121'),
                        ('https://t.me/TopRussiaBrand/436', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #122'),
                        ('https://t.me/TopRussiaBrand/437', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #123'),
                        ('https://t.me/TopRussiaBrand/438', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #124'),
                        ('https://t.me/TopRussiaBrand/439', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #125'),
                        ('https://t.me/TopRussiaBrand/440', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #126'),
                        ('https://t.me/TopRussiaBrand/442', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #127'),
                        ('https://t.me/TopRussiaBrand/443', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #128'),
                        ('https://t.me/TopRussiaBrand/444', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #129'),
                        ('https://t.me/TopRussiaBrand/445', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #130'),
                        ('https://t.me/TopRussiaBrand/446', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #131'),
                        ('https://t.me/TopRussiaBrand/447', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #132'),
                        ('https://t.me/TopRussiaBrand/448', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #133'),
                        ('https://t.me/TopRussiaBrand/449', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #134'),
                        ('https://t.me/TopRussiaBrand/450', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #135'),
                        ('https://t.me/TopRussiaBrand/451', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #136'),
                        ('https://t.me/TopRussiaBrand/452', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #137'),
                        ('https://t.me/TopRussiaBrand/453', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #138'),
                        ('https://t.me/TopRussiaBrand/454', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #139'),
                        ('https://t.me/TopRussiaBrand/455', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #140'),
                        ('https://t.me/TopRussiaBrand/456', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #141'),
                        ('https://t.me/TopRussiaBrand/458', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #142'),
                        ('https://t.me/TopRussiaBrand/459', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #143'),
                        ('https://t.me/TopRussiaBrand/460', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #144'),
                        ('https://t.me/TopRussiaBrand/461', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #145'),
                        ('https://t.me/TopRussiaBrand/462', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #146'),
                        ('https://t.me/TopRussiaBrand/463', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #147'),
                        ('https://t.me/TopRussiaBrand/467', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #148'),
                        ('https://t.me/TopRussiaBrand/468', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #149'),
                        ('https://t.me/TopRussiaBrand/469', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #150'),
                        ('https://t.me/TopRussiaBrand/470', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #151'),
                        ('https://t.me/TopRussiaBrand/471', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #152'),
                        ('https://t.me/TopRussiaBrand/472', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #153'),
                        ('https://t.me/TopRussiaBrand/474', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #154'),
                        ('https://t.me/TopRussiaBrand/475', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #155'),
                        ('https://t.me/TopRussiaBrand/476', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #156'),
                        ('https://t.me/TopRussiaBrand/477', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #157'),
                        ('https://t.me/TopRussiaBrand/478', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #158'),
                        ('https://t.me/TopRussiaBrand/479', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #159'),
                        ('https://t.me/TopRussiaBrand/480', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #160'),
                        ('https://t.me/TopRussiaBrand/481', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #161'),
                        ('https://t.me/TopRussiaBrand/482', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #162'),
                        ('https://t.me/TopRussiaBrand/483', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #163'),
                        ('https://t.me/TopRussiaBrand/484', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #164'),
                        ('https://t.me/TopRussiaBrand/485', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #165'),
                        ('https://t.me/TopRussiaBrand/488', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #166'),
                        ('https://t.me/TopRussiaBrand/489', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #167'),
                        ('https://t.me/TopRussiaBrand/490', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #168'),
                        ('https://t.me/TopRussiaBrand/491', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #169'),
                        ('https://t.me/TopRussiaBrand/492', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #170'),
                        ('https://t.me/TopRussiaBrand/493', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #171'),
                        ('https://t.me/TopRussiaBrand/494', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #172'),
                        ('https://t.me/TopRussiaBrand/495', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #173'),
                        ('https://t.me/TopRussiaBrand/496', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #174'),
                        ('https://t.me/TopRussiaBrand/497', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #175'),
                        ('https://t.me/TopRussiaBrand/498', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #176'),
                        ('https://t.me/TopRussiaBrand/499', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #177'),
                        ('https://t.me/TopRussiaBrand/500', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #178'),
                        ('https://t.me/TopRussiaBrand/501', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #179'),
                        ('https://t.me/TopRussiaBrand/502', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #180'),
                        ('https://t.me/TopRussiaBrand/503', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #181'),
                        ('https://t.me/TopRussiaBrand/504', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #182'),
                        ('https://t.me/TopRussiaBrand/505', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #183'),
                        ('https://t.me/TopRussiaBrand/506', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #184'),
                        ('https://t.me/TopRussiaBrand/507', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #185'),
                        ('https://t.me/TopRussiaBrand/508', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #186'),
                        ('https://t.me/TopRussiaBrand/509', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #187'),
                        ('https://t.me/TopRussiaBrand/510', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #188'),
                        ('https://t.me/TopRussiaBrand/511', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #189'),
                        ('https://t.me/TopRussiaBrand/512', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #190'),
                        ('https://t.me/TopRussiaBrand/513', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #191'),
                        ('https://t.me/TopRussiaBrand/514', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #192'),
                        ('https://t.me/TopRussiaBrand/515', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #193'),
                        ('https://t.me/TopRussiaBrand/517', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #194'),
                        ('https://t.me/TopRussiaBrand/519', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #195'),
                        ('https://t.me/TopRussiaBrand/520', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #196'),
                        ('https://t.me/TopRussiaBrand/521', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #197'),
                        ('https://t.me/TopRussiaBrand/524', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #198'),
                        ('https://t.me/TopRussiaBrand/525', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #199'),
                        ('https://t.me/TopRussiaBrand/527', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #200'),
                        ('https://t.me/TopRussiaBrand/528', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #201'),
                        ('https://t.me/TopRussiaBrand/529', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #202'),
                        ('https://t.me/TopRussiaBrand/532', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #203'),
                        ('https://t.me/TopRussiaBrand/533', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #204'),
                        ('https://t.me/TopRussiaBrand/534', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #205'),
                        ('https://t.me/TopRussiaBrand/536', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #206'),
                        ('https://t.me/TopRussiaBrand/538', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #207'),
                        ('https://t.me/TopRussiaBrand/542', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #208'),
                        ('https://t.me/TopRussiaBrand/543', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #209'),
                        ('https://t.me/TopRussiaBrand/549', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #210'),
                        ('https://t.me/TopRussiaBrand/551', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #211'),
                        ('https://t.me/TopRussiaBrand/552', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #212'),
                        ('https://t.me/TopRussiaBrand/553', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #213'),
                        ('https://t.me/TopRussiaBrand/554', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #214'),
                        ('https://t.me/TopRussiaBrand/555', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #215'),
                        ('https://t.me/TopRussiaBrand/556', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #216'),
                        ('https://t.me/TopRussiaBrand/557', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #217'),
                        ('https://t.me/TopRussiaBrand/558', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #218'),
                        ('https://t.me/TopRussiaBrand/562', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #219'),
                        ('https://t.me/TopRussiaBrand/563', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #220'),
                        ('https://t.me/TopRussiaBrand/568', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #221'),
                        ('https://t.me/TopRussiaBrand/569', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #222'),
                        ('https://t.me/TopRussiaBrand/570', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #223'),
                        ('https://t.me/TopRussiaBrand/571?single', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #224'),
                        ('https://t.me/TopRussiaBrand/575', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #225'),
                        ('https://t.me/TopRussiaBrand/576', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #226'),
                        ('https://t.me/TopRussiaBrand/577', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #227'),
                        ('https://t.me/TopRussiaBrand/578', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #228'),
                        ('https://t.me/TopRussiaBrand/579', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #229'),
                        ('https://t.me/TopRussiaBrand/580', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #230'),
                        ('https://t.me/TopRussiaBrand/581', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #231'),
                        ('https://t.me/TopRussiaBrand/582', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #232'),
                        ('https://t.me/TopRussiaBrand/583', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #233'),
                        ('https://t.me/TopRussiaBrand/584', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #234'),
                        ('https://t.me/TopRussiaBrand/585', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #235'),
                        ('https://t.me/TopRussiaBrand/586', '–ü—Ä–∏—Ä–æ–¥–∞ –∏ —ç–∫–æ–ª–æ–≥–∏—è –≠–ª—å–±—Ä—É—Å–∞', '–ù–æ–≤–æ—Å—Ç—å #236'),
                        ('https://t.me/TopRussiaBrand/587', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #237'),
                        ('https://t.me/TopRussiaBrand/588', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #238'),
                        ('https://t.me/TopRussiaBrand/589', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #239'),
                        ('https://t.me/TopRussiaBrand/590', '–ò—Å—Ç–æ—Ä–∏—è –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–π –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π', '–ù–æ–≤–æ—Å—Ç—å #240'),
                        ('https://t.me/TopRussiaBrand/591', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #241'),
                        ('https://t.me/TopRussiaBrand/593', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #242'),
                        ('https://t.me/TopRussiaBrand/597', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #243'),
                        ('https://t.me/TopRussiaBrand/598', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #244'),
                        ('https://t.me/TopRussiaBrand/599', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #245'),
                        ('https://t.me/TopRussiaBrand/600', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #246'),
                        ('https://t.me/TopRussiaBrand/601', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #247'),
                        ('https://t.me/TopRussiaBrand/602', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #248'),
                        ('https://t.me/TopRussiaBrand/603', '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ—Ä—ã', '–ù–æ–≤–æ—Å—Ç—å #249'),
                        ('https://t.me/TopRussiaBrand/604', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≠–ª—å–±—Ä—É—Å–æ–º', '–ù–æ–≤–æ—Å—Ç—å #250')
                                                    ]

                for telegram_url, news_type, title in news_data:
                    # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å UNIQUE constraint –Ω–∞ telegram_url –≤ –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü–µ news,
                    # —á—Ç–æ–±—ã ON CONFLICT DO NOTHING —Ä–∞–±–æ—Ç–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.
                    await conn.execute('''
                        INSERT INTO news (telegram_url, news_type, title)
                        VALUES ($1, $2, $3)
                        ON CONFLICT (telegram_url) DO NOTHING;
                    ''', telegram_url, news_type, title)
                
                logger.info("–¢–µ—Å—Ç–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã (–µ—Å–ª–∏ –∏—Ö –±—ã–ª–æ –º–µ–Ω—å—à–µ 10).")
            else:
                logger.info("–¢–µ—Å—Ç–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ.")


    def generate_qr(self, qr_id: str):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç QR-–∫–æ–¥ –¥–ª—è –ø–æ—Å—Ç–∞"""
        qr_content_data = f"mountain:{qr_id}"
        encoded_qr_data = quote_plus(qr_content_data)
        full_qr_link = f"https://t.me/{self.bot_username}?start={encoded_qr_data}"
        
        qr = qrcode.QRCode(version=1, box_size=10, border=4)
        qr.add_data(full_qr_link)
        qr.make()
        img = qr.make_image(fill_color="black", back_color="white")
        filename = f"qr_{qr_id}.png"
        img.save(filename)
        logger.info(f"QR-–∫–æ–¥ –¥–ª—è '{qr_id}' —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {full_qr_link}")
        return filename, full_qr_link

    async def log_user_interaction(self, user, interaction_type, qr_id=None, post_id=None):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            async with self.db.pool.acquire() as conn:
                await conn.execute('''
                    INSERT INTO user_interactions 
                    (user_id, username, first_name, last_name, qr_id, post_id, interaction_type)
                    VALUES ($1, $2, $3, $4, $5, $6, $7)
                ''', user.id, user.username, user.first_name, user.last_name, qr_id, post_id, interaction_type)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è: {e}")

    # --- –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î (–û–ë–ù–û–í–õ–ï–ù–û!) ---
    async def get_post_by_qr_id(self, qr_id: str):
        async with self.db.pool.acquire() as conn:
            return await conn.fetchrow("SELECT * FROM posts WHERE qr_id = $1 AND is_active = TRUE", qr_id)

    async def get_news_by_type(self, news_type: str, offset: int = 0, limit: int = NEWS_PER_PAGE):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Ç–∏–ø—É —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Å–º–µ—â–µ–Ω–∏–µ–º –∏ –ª–∏–º–∏—Ç–æ–º.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
        """
        try:
            async with self.db.pool.acquire() as conn:
                news = await conn.fetch(
                    "SELECT telegram_url, news_type, title FROM news WHERE news_type = $1 ORDER BY id DESC OFFSET $2 LIMIT $3",
                    news_type, offset, limit
                )
                total_news = await conn.fetchval(
                    "SELECT COUNT(*) FROM news WHERE news_type = $1",
                    news_type
                )
                return news, total_news
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ —Ç–∏–ø—É: {e}")
            return [], 0 # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∏ 0 –ø—Ä–∏ –æ—à–∏–±–∫–µ

    async def get_all_news(self, offset: int = 0, limit: int = 20): # –î–æ–±–∞–≤–ª—è–µ–º offset –∏ –¥–µ–ª–∞–µ–º limit –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        """
        –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Å–º–µ—â–µ–Ω–∏–µ–º –∏ –ª–∏–º–∏—Ç–æ–º.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π.
        """
        try:
            async with self.db.pool.acquire() as conn:
                news = await conn.fetch("SELECT telegram_url, news_type, title FROM news ORDER BY id DESC OFFSET $1 LIMIT $2", offset, limit)
                total_news = await conn.fetchval("SELECT COUNT(*) FROM news")
                return news, total_news
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
            return [], 0


    # --- –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ ---
    def create_main_menu_markup(self):
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üí¨ –û–±—â–∏–π —á–∞—Ç", url="https://t.me/topofrussia"),
                InlineKeyboardButton(text="üì¢ –ù–∞—à –∫–∞–Ω–∞–ª", url="https://t.me/TopRussiaBrand")
            ],
            [
                InlineKeyboardButton(text="üì∏ –§–æ—Ç–æ–º–∞—Ä–∞—Ñ–æ–Ω", url="https://t.me/TopRussiaBrand/618"), # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É
                InlineKeyboardButton(text="üì∞ –ù–æ–≤–æ—Å—Ç–∏", callback_data="show_news")
            ],
            [
                InlineKeyboardButton(text="üåü –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç", url="https://xn--80adjmba6ajodma8f.xn--p1ai/")
            ]
        ])

    def create_post_markup(self, post_id):
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üí¨ –û–±—Å—É–¥–∏—Ç—å –≤ —á–∞—Ç–µ", url="https://t.me/topofrussia"),
                InlineKeyboardButton(text="üì¢ –ë–æ–ª—å—à–µ –Ω–æ–≤–æ—Å—Ç–µ–π", url="https://t.me/TopRussiaBrand")
            ],
            [
                #InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ç", callback_data=f"next_{post_id}"),
                #InlineKeyboardButton(text="üîç –ù–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–µ–µ", callback_data="search_posts")
            ],
            [
                InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
            ]
        ])

    # --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---
    async def start_command(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π QR-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
        args = message.text.split()
        
        if len(args) > 1:
            qr_url = unquote(args[1])
            await self.handle_qr_url(message, qr_url)
        else:
            msg = (
                "üèîÔ∏è <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ \"–í–µ—Ä—à–∏–Ω–∞ –†–æ—Å—Å–∏–∏\"!</b>\n\n"
                "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –≥–æ—Ä–∞—Ö –†–æ—Å—Å–∏–∏ —á–µ—Ä–µ–∑ QR-–∫–æ–¥—ã "
                "–∏ –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏—è—Ö –∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è—Ö.\n\n"
                "üîç <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
                "‚Ä¢ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ QR-–∫–æ–¥–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–æ—Ä–∞—Ö\n"
                "‚Ä¢ –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Å—Ç–∞—Ç–µ–π\n"
                "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É –ª—é–±–∏—Ç–µ–ª–µ–π –≥–æ—Ä\n\n"
                "üì± <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
                "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
                "/news - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏\n"
                "/help - –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞"
            )
            
            await message.answer(msg, reply_markup=self.create_main_menu_markup(), parse_mode=ParseMode.HTML)

    async def help_command(self, message: Message):
        msg = (
            "üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É \"–í–µ—Ä—à–∏–Ω—ã –†–æ—Å—Å–∏–∏\"</b>\n\n"
            "üîç <b>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
            "‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–æ—Ä–∞—Ö —á–µ—Ä–µ–∑ QR-–∫–æ–¥—ã\n"
            "‚Ä¢ –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Å—Ç–∞—Ç–µ–π –æ –≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏—è—Ö\n"
            "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É –ª—é–±–∏—Ç–µ–ª–µ–π –≥–æ—Ä\n\n"
            "üéØ <b>–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å QR-–∫–æ–¥–∞–º–∏:</b>\n"
            "1. –ù–∞–π–¥–∏—Ç–µ QR-–∫–æ–¥ —Ä—è–¥–æ–º —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≥–æ—Ä–µ\n"
            "2. –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ –µ–≥–æ –∫–∞–º–µ—Ä–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
            "3. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É - –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —ç—Ç–æ—Ç –±–æ—Ç\n"
            "4. –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n\n"
            "üí¨ <b>–°–æ–æ–±—â–µ—Å—Ç–≤–æ:</b>\n"
            "‚Ä¢ –û–±—â–∏–π —á–∞—Ç: https://t.me/topofrussia\n"
            "‚Ä¢ –ö–∞–Ω–∞–ª –Ω–æ–≤–æ—Å—Ç–µ–π: https://t.me/TopRussiaBrand\n"
            "‚Ä¢ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç: https://xn--80adjmba6ajodma8f.xn--p1ai/"
        )
        await message.answer(msg, parse_mode=ParseMode.HTML, disable_web_page_preview=True)

    async def news_command(self, message: Message, state: FSMContext):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ (–∫–∞—Ç–µ–≥–æ—Ä–∏–∏)"""
        await self.show_news_categories(message, state)

    async def generate_qr_command(self, message: Message):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
        if not self.admin_id or str(message.from_user.id) != self.admin_id:
            await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return

        args = message.text.split()
        if len(args) < 2:
            await message.answer("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /qr <qr_id>\n–ü—Ä–∏–º–µ—Ä: /qr p0001")
            return

        qr_id = args[1]
        post = await self.get_post_by_qr_id(qr_id)
        
        if not post:
            await message.answer(f"‚ùå –ü–æ—Å—Ç —Å ID '{qr_id}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        try:
            filename, qr_link = self.generate_qr(qr_id)
            
            with open(filename, 'rb') as qr_file:
                await message.answer_photo(
                    photo=qr_file,
                    caption=(
                        f"üì± <b>QR-–∫–æ–¥ –¥–ª—è: {post['title']}</b>\n\n"
                        f"üîó –°—Å—ã–ª–∫–∞: <code>{qr_link}</code>\n\n"
                        f"–ü—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ø–∞–¥—É—Ç –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ {post['title']}."
                    ),
                    parse_mode=ParseMode.HTML
                )
            
            os.remove(filename)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR: {e}")
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞: {e}")

    # --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ QR –∏ –ø–æ—Å—Ç–æ–≤ ---
    async def handle_qr_url(self, message: types.Message, qr_data: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ QR-–∫–æ–¥–∞"""
        try:
            if qr_data.startswith('mountain:'):
                qr_id = qr_data.split(':', 1)[1]
                post = await self.get_post_by_qr_id(qr_id)
            
                if post:
                    await self.log_user_interaction(message.from_user, 'qr_scan', qr_id=qr_id, post_id=post['id'])
                    
                    welcome_msg = (
                        f"üèîÔ∏è <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n"
                        f"–í—ã –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–ª–∏ QR-–∫–æ–¥!\n"
                        f"üìç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ: <b>{post['title']}</b>\n\n"
                        f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É! üëá"
                    )
                    
                    await message.answer(welcome_msg, reply_markup=self.create_main_menu_markup(), parse_mode=ParseMode.HTML)
                    await asyncio.sleep(1) # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —Å–ª–∏–ø–∞–ª–∏—Å—å
                    await self.show_post(message, post)
                else:
                    await self.log_user_interaction(message.from_user, 'qr_scan_not_found', qr_id=qr_id) # –õ–æ–≥–∏—Ä—É–µ–º, —á—Ç–æ QR –Ω–µ –Ω–∞–π–¥–µ–Ω
                    await message.answer(
                        "üö´ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç—Ç–æ–º—É QR-–∫–æ–¥—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.",
                        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
                        ])
                    )
            else:
                await message.answer(
                    "üëã –ü—Ä–∏–≤–µ—Ç! –í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –±–æ—Ç–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –í–µ—Ä—à–∏–Ω–∞ –†–æ—Å—Å–∏–∏!",
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
                    ])
                )
            
        except Exception as e:
            logger.error(f"QR Error: {e}")
            await message.answer(
                "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ QR-–∫–æ–¥–∞.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
                ])
            )

    async def show_post(self, message: types.Message, post):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π"""
        try:
            await message.answer_photo(
                photo=post['image_url'],
                caption=f"<b>{post['title']}</b>\n\n{post['description']}",
                reply_markup=self.create_post_markup(post['id']),
                parse_mode=ParseMode.HTML
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: {e}")
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ñ–æ—Ç–æ, –µ—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
            await message.answer(
                f"<b>{post['title']}</b>\n\n{post['description']}\n\nüñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {post['image_url']}",
                reply_markup=self.create_post_markup(post['id']),
                parse_mode=ParseMode.HTML
            )

    # --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π (–û–ë–ù–û–í–õ–ï–ù–û!) ---
    async def show_news_categories(self, message: types.Message, state: FSMContext):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π"""
        try:
            async with self.db.pool.acquire() as conn:
                categories_db = await conn.fetch(
                    "SELECT DISTINCT news_type, COUNT(*) as count FROM news GROUP BY news_type ORDER BY count DESC"
                )

            if not categories_db:
                await message.answer("üì∞ –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
                return

            builder = InlineKeyboardBuilder()
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞–ø–ø–∏–Ω–≥ –≤ FSMContext
            category_slug_map = {} 

            for category in categories_db:
                category_hash = hashlib.md5(category['news_type'].encode('utf-8')).hexdigest()[:16] 
                category_slug_map[category_hash] = category['news_type']

                builder.button(
                    text=f"üìÇ {category['news_type']} ({category['count']})",
                    callback_data=f"news_category:{category_hash}" # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö–µ—à –∏ –Ω–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å
                )
            
            builder.adjust(1) # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥
            await state.update_data(category_slug_map=category_slug_map) # –°–æ—Ö—Ä–∞–Ω—è–µ–º map –≤ FSMContext

            builder.row(InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
            
            await message.answer(
                "üì∞ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                reply_markup=builder.as_markup(),
                parse_mode=ParseMode.HTML
            )

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ show_news_categories: {e}")
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–æ–≤–æ—Å—Ç–µ–π.")

    # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–∞–≥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
    async def send_paginated_news(self, message_or_callback_query: Message | CallbackQuery, news_type: str, offset: int):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–æ–≤–æ—Å—Ç–µ–π —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–∫–∞–∑–∞, —Ç–∞–∫ –∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
        """

        is_callback = isinstance(message_or_callback_query, CallbackQuery)
        message = message_or_callback_query.message if is_callback else message_or_callback_query

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ö—ç—à –¥–ª—è news_type, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –≤ callback_data
    # –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ callback_data –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –∫–æ—Ä–æ—Ç–∫–æ–π
        news_type_hash = hashlib.md5(news_type.encode('utf-8')).hexdigest()[:16]

        news_items, total_news = await self.db.get_news_by_type(news_type, offset, NEWS_PER_PAGE)

        if not news_items:
            if is_callback:
                await message_or_callback_query.answer("–ù–æ–≤–æ—Å—Ç–µ–π –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –±–æ–ª—å—à–µ –Ω–µ—Ç.")
            else:
                await message.edit_text("–ù–æ–≤–æ—Å—Ç–µ–π –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç.", reply_markup=self.create_main_menu_markup(), parse_mode=ParseMode.HTML)
            return

        message_text = f"--- \n<b>{news_type}:</b>\n---\n"
        for i, item in enumerate(news_items):
            title = item.get('title', f"–ù–æ–≤–æ—Å—Ç—å #{item['id']}")
            message_text += f"{offset + i + 1}. <a href='{item['telegram_url']}'>{title}</a>\n"

        remaining_news = total_news - (offset + len(news_items))
        if remaining_news > 0:
            message_text += f"\n... –∏ –µ—â—ë {remaining_news} –Ω–æ–≤–æ—Å—Ç–µ–π"

        builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if offset > 0:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—ç—à –≤ callback_data
            builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"news_nav:{news_type_hash}:{offset - NEWS_PER_PAGE}")

    # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä—ë–¥"
        if offset + NEWS_PER_PAGE < total_news:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—ç—à –≤ callback_data
            builder.button(text="–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è", callback_data=f"news_nav:{news_type_hash}:{offset + NEWS_PER_PAGE}")

        if offset > 0 and offset + NEWS_PER_PAGE < total_news:
            builder.adjust(2)
        else:
            builder.adjust(1)

        builder.row(InlineKeyboardButton(text="‚óÄÔ∏è –í –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π", callback_data="show_categories_menu"))
        builder.row(InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))

        try:
            if is_callback:
                await message.edit_text(
                    message_text,
                    reply_markup=builder.as_markup(),
                    parse_mode=ParseMode.HTML,
                    disable_web_page_preview=True
                )
                await message_or_callback_query.answer()
            else:
                await message.answer(
                    message_text,
                    reply_markup=builder.as_markup(),
                    parse_mode=ParseMode.HTML,
                    disable_web_page_preview=True
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞–≥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
            if is_callback:
                await message_or_callback_query.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π.")


    # --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–∏—Å–∫–∞ --- (–ù–µ –º–µ–Ω—è–ª–∏—Å—å, —Ç–∞–∫ –∫–∞–∫ –∑–∞–ø—Ä–æ—Å –±—ã–ª —Ç–æ–ª—å–∫–æ –ø—Ä–æ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –Ω–æ–≤–æ—Å—Ç—è—Ö)
    async def process_search_keyword(self, message: types.Message, state: FSMContext, search_type: str):
        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞"""
        try:
            keyword = message.text.strip().lower()
            await state.clear() # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
            
            if search_type == "news":
                await self.search_news(message, keyword)
            else: # search_type == "posts"
                await self.search_posts(message, keyword)
                
        except asyncio.exceptions.CancelledError:
            logger.warning("–ó–∞–¥–∞—á–∞ –ø–æ–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑-–∑–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è).")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ.")
            await state.clear()

    async def search_news(self, message: types.Message, keyword: str):
        """–ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π"""
        async with self.db.pool.acquire() as conn:
            results = await conn.fetch("""
                SELECT telegram_url, news_type, title FROM news 
                WHERE LOWER(title) LIKE $1 OR LOWER(news_type) LIKE $1
                ORDER BY id DESC LIMIT 15
            """, f"%{keyword}%")
        
        if not results:
            await message.answer(
                f"üîç –ü–æ –∑–∞–ø—Ä–æ—Å—É '<b>{message.text}</b>' –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üì∞ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="show_news")],
                    [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
                ]),
                parse_mode=ParseMode.HTML
            )
            return
        
        msg_parts = ["---", f"<b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{message.text}':</b>", "---", ""]
        
        display_limit = 5
        total_displayed = 0

        for i, result in enumerate(results):
            title = result.get('title', f"–ù–æ–≤–æ—Å—Ç—å #{result['id']}")
            msg_parts.append(f"{i + 1}. <a href='{result['telegram_url']}'>{title}</a>")
            total_displayed += 1
            if total_displayed >= display_limit and len(results) > display_limit:
                break

        if len(results) > display_limit:
            msg_parts.append(f"\n... –∏ –µ—â—ë {len(results) - display_limit} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        
        markup = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üîç –ù–æ–≤—ã–π –ø–æ–∏—Å–∫", callback_data="search_news"),
                InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
            ]
        ])
        
        await message.answer(
            "\n".join(msg_parts)[:4000],
            reply_markup=markup,
            parse_mode=ParseMode.HTML,
            disable_web_page_preview=True
        )

    async def search_posts(self, message: types.Message, keyword: str):
        """–ü–æ–∏—Å–∫ –ø–æ—Å—Ç–æ–≤"""
        async with self.db.pool.acquire() as conn:
            results = await conn.fetch("""
                SELECT * FROM posts 
                WHERE (LOWER(title) LIKE $1 OR LOWER(description) LIKE $1) AND is_active = TRUE
                ORDER BY id LIMIT 10
            """, f"%{keyword}%")
        
        if not results:
            await message.answer(
                f"üîç –ü–æ –∑–∞–ø—Ä–æ—Å—É '<b>{message.text}</b>' –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üîç –ù–æ–≤—ã–π –ø–æ–∏—Å–∫", callback_data="search_posts")],
                    [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
                ]),
                parse_mode=ParseMode.HTML
            )
            return
        
        await self.log_user_interaction(message.from_user, 'search', qr_id=keyword) 
        
        if len(results) == 1:
            await self.show_post(message, results[0])
            return
        
        msg_parts = [f"üîç <b>–ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:</b>\n"]
        buttons = []
        
        for i, post in enumerate(results, 1):
            msg_parts.append(f"{i}. <b>{post['title']}</b>\n ¬† {post['description'][:100]}{'...' if len(post['description']) > 100 else ''}\n")
            buttons.append([
                InlineKeyboardButton(
                    text=f"üìç {post['title']}",
                    callback_data=f"show_post_{post['qr_id']}"
                )
            ])
        
        buttons.extend([
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ])
        
        markup = InlineKeyboardMarkup(inline_keyboard=buttons)
        
        await message.answer(
            "\n".join(msg_parts)[:4000],
            reply_markup=markup,
            parse_mode=ParseMode.HTML
        )
    from telegram import Update
    from telegram.ext import ContextTypes

    async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
        args = context.args
        if args:
            if args[0] == 'from_channel':
                await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ –∫–∞–Ω–∞–ª –í–µ—Ä—à–∏–Ω–∞ –†–æ—Å—Å–∏–∏!")
            else:
                await update.message.reply_text(f"üîç –ü–æ–ª—É—á–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä: {args[0]}")
        else:
            await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ü—Ä–æ—Å—Ç–æ /start –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.")

    async def get_channel_id(message: Message):
        await message.answer(f"ID —á–∞—Ç–∞: {message.chat.id}")
    
    # --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π ---
    async def text_message_handler(self, message: Message, state: FSMContext):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        current_state = await state.get_state()
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{message.text}'. –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
        
        if current_state == SearchStates.waiting_for_news_keyword:
            await self.process_search_keyword(message, state, "news")
        elif current_state == SearchStates.waiting_for_post_keyword:
            await self.process_search_keyword(message, state, "posts")
        elif message.text.startswith('/'):
            return # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Ö–µ–Ω–¥–ª–µ—Ä–æ–º
        elif f'https://t.me/{self.bot_username}?start=' in message.text:
            qr_url = message.text.split(f'https://t.me/{self.bot_username}?start=')[-1]
            await self.handle_qr_url(message, unquote(qr_url))
        else:
            await message.answer(
                "ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∫–∞–Ω–∞–ª –í–µ—Ä—à–∏–Ω–∞ –†–æ—Å—Å–∏–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
                ])
            )

    async def callback_handler(self, callback: types.CallbackQuery, state: FSMContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫"""
        try:
            # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            logger.info(f"–ü–æ–ª—É—á–µ–Ω callback: {callback.data}")
            
            if callback.data == "main_menu":
                await state.clear() # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
                await callback.message.edit_text( # –ò—Å–ø–æ–ª—å–∑—É–µ–º edit_text –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                    "üèîÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                    reply_markup=self.create_main_menu_markup()
                )
                await callback.answer() # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–ª–±—ç–∫ –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            
            elif callback.data == "show_news":
                # –≠—Ç–æ –∫–Ω–æ–ø–∫–∞ "–ù–æ–≤–æ—Å—Ç–∏" –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é, –≤–µ–¥–µ—Ç –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
                await self.show_news_categories(callback.message, state) 
                await callback.answer() 

            elif callback.data == "show_categories_menu":
                # –≠—Ç–æ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π" –∏–∑ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
                await self.show_news_categories(callback.message, state)
                await callback.answer()
            
            elif callback.data.startswith("news_category:"): # –û–ë–ù–û–í–õ–ï–ù–û: –Ω–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –∏ –¥–≤–æ–µ—Ç–æ—á–∏–µ
                category_hash = callback.data.split(":")[1] # –ü–∞—Ä—Å–∏–º —Ö–µ—à
                logger.info(f"–ü–∞—Ä—Å–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —Ö–µ—à: {category_hash}")
                current_data = await state.get_data()
                category_slug_map = current_data.get('category_slug_map', {})
                full_category_name = category_slug_map.get(category_hash)
                logger.info(f"–ù–∞–π–¥–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {full_category_name}")
                
                if full_category_name:
                    logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —á–µ—Ä–µ–∑ —Ö–µ—à: {full_category_name}")
                    # –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ–∫–∞–∑–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞—á–∏–Ω–∞–µ–º —Å offset=0
                    await self.send_paginated_news(callback, full_category_name, 0)
                else:
                    await callback.message.edit_text("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –¥–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–ª–∏.")
                    await callback.answer("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            
            elif callback.data.startswith("news_nav:"): # –ù–û–í–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –î–õ–Ø –ù–ê–í–ò–ì–ê–¶–ò–ò
                logger.info(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é: {callback.data}")
                parts = callback.data.split(':')
                news_type_hash = parts[1]  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
                offset = int(parts[2])
                
                current_data = await state.get_data()
                category_slug_map = current_data.get('category_slug_map', {})
               
                # –†–∞–∑—Ä–µ—à–∞–µ–º —Ö—ç—à –æ–±—Ä–∞—Ç–Ω–æ –≤ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                full_news_type = category_slug_map.get(news_type_hash)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
                logger.info(f"–ù–∞–≤–∏–≥–∞—Ü–∏—è: —Ö–µ—à={news_type_hash}, –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ={full_news_type}")

                if full_news_type:
                    # –ü–µ—Ä–µ–¥–∞–µ–º –ü–û–õ–ù–û–ï –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ send_paginated_news
                    await self.send_paginated_news(callback, full_news_type, offset)
                else:
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –∫–∞—Ä—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ—Ç–µ—Ä—è–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω)
                    await callback.message.edit_text(
                        "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. "
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                        reply_markup=self.create_main_menu_markup() # –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Ç—å –Ω–∞–∑–∞–¥
                    )
                    await callback.answer("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            
            elif callback.data == "search_news":
                await callback.message.edit_text( # –ò—Å–ø–æ–ª—å–∑—É–µ–º edit_text
                    "üîç <b>–ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π</b>\n\n–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ:",
                    parse_mode=ParseMode.HTML
                )
                await state.set_state(SearchStates.waiting_for_news_keyword)
                await callback.answer()

            elif callback.data.startswith("next_"):
                # –≠—Ç–∞ –ª–æ–≥–∏–∫–∞ —Ç–µ–ø–µ—Ä—å –Ω–µ –Ω—É–∂–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏—è –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ news_nav
                await callback.message.answer("–§—É–Ω–∫—Ü–∏—è '–°–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ç' –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.") # –ó–∞–≥–ª—É—à–∫–∞
                await callback.answer()
            
            elif callback.data.startswith("show_post_"):
                qr_id = callback.data.replace("show_post_", "")
                post = await self.get_post_by_qr_id(qr_id)
                if post:
                    # –í–∞–∂–Ω–æ: –µ—Å–ª–∏ —ç—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è,
                    # —Ç–æ post['image_url'] –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Telegram file_id, –∞ –Ω–µ URL.
                    # –ï—Å–ª–∏ URL, —Ç–æ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ.
                    try:
                        await callback.message.edit_media(
                            media=types.InputMediaPhoto(media=post['image_url'], caption=f"<b>{post['title']}</b>\n\n{post['description']}", parse_mode=ParseMode.HTML),
                            reply_markup=self.create_post_markup(post['id'])
                        )
                    except Exception as media_e:
                        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ–¥–∏–∞, –æ—Ç–ø—Ä–∞–≤–ª—è—é –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {media_e}")
                        await callback.message.delete() # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –¥—É–±–ª–µ–π
                        await self.show_post(callback.message, post)
                    
                    await callback.answer()
                else:
                    await callback.message.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç—Ç–æ–º—É –ø–æ—Å—Ç—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
                    await callback.answer("–ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–æ–ª–ª–±—ç–∫–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
            else:
                logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback: {callback.data}")
                await callback.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")

        except asyncio.exceptions.CancelledError:
            logger.warning("–ó–∞–¥–∞—á–∞ callback_handler –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ callback_handler: {e}")
            await callback.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")
            await state.clear()
            await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")


    async def on_startup(self):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞"""
        logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        try:
            await self.setup_database()
            logger.info("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")
        except Exception as e:
            logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. {e}")
            exit(1)

    async def on_shutdown(self):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞"""
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...")
        if self.db:
            await self.db.disconnect() # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –≤–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞ Database –µ—Å—Ç—å –º–µ—Ç–æ–¥ disconnect()
            logger.info("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.")
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

    async def run(self):
        token = os.getenv("TELEGRAM_BOT_TOKEN")
        if not token:
            logger.error("TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
            return

        self.bot = Bot(token=token, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
        self.dp = Dispatcher()

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
        self.dp.message.register(self.start_command, Command("start"))
        self.dp.message.register(self.help_command, Command("help"))
        self.dp.message.register(self.news_command, Command("news"))
        self.dp.message.register(self.generate_qr_command, Command("qr"))

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥)
        self.dp.message.register(self.text_message_handler)

        self.dp.callback_query.register(self.callback_handler)
        self.dp.startup.register(self.on_startup)
        self.dp.shutdown.register(self.on_shutdown)
        # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        self.dp.message.register(self.on_join, F.new_chat_members)
        try:
            await self.dp.start_polling(self.bot)
        except asyncio.exceptions.CancelledError:
            logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω.")
        except KeyboardInterrupt:
            logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (KeyboardInterrupt).")
        except Exception as e:
            logger.critical(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ polling: {e}")
        finally:
            if self.bot:
                await self.bot.session.close() # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞

if __name__ == "__main__":
    bot_app = TelegramBot()
    
    try:
        asyncio.run(bot_app.run())
    except (asyncio.exceptions.CancelledError, KeyboardInterrupt):
        logger.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ —Ä–∞–±–æ—Ç—É –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–Ω–µ —Ü–∏–∫–ª–∞ polling: {e}")